// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// likelihood_C
NumericVector likelihood_C(NumericVector media, NumericVector correctedFixTime, NumericVector tim, int sum_correctedFixTime, double stateStep, NumericMatrix changeMatrix, NumericMatrix prStates, double sigma, NumericMatrix changeUp, NumericMatrix changeDown);
RcppExport SEXP _likelihood_likelihood_C(SEXP mediaSEXP, SEXP correctedFixTimeSEXP, SEXP timSEXP, SEXP sum_correctedFixTimeSEXP, SEXP stateStepSEXP, SEXP changeMatrixSEXP, SEXP prStatesSEXP, SEXP sigmaSEXP, SEXP changeUpSEXP, SEXP changeDownSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type media(mediaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type correctedFixTime(correctedFixTimeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tim(timSEXP);
    Rcpp::traits::input_parameter< int >::type sum_correctedFixTime(sum_correctedFixTimeSEXP);
    Rcpp::traits::input_parameter< double >::type stateStep(stateStepSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type changeMatrix(changeMatrixSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type prStates(prStatesSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type changeUp(changeUpSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type changeDown(changeDownSEXP);
    rcpp_result_gen = Rcpp::wrap(likelihood_C(media, correctedFixTime, tim, sum_correctedFixTime, stateStep, changeMatrix, prStates, sigma, changeUp, changeDown));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _likelihood_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_likelihood_likelihood_C", (DL_FUNC) &_likelihood_likelihood_C, 10},
    {"_likelihood_rcpp_hello_world", (DL_FUNC) &_likelihood_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_likelihood(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
